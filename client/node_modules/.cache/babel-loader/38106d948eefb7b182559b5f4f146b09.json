{"ast":null,"code":"import { GET_VIDEOGAMES, GET_GENRE, GET_DETAIL, FILTER_BY_GENRES, FILTER_CREATED, ORDER_BY_NAME, ORDER_BY_RATING, GET_NAME_VIDEOGAMES, GET_LOADER, VACIAR_DETAIL } from '../constantes';\nconst initialState = {\n  videogames: [],\n  genres: [],\n  allVideogames: []\n};\n\nfunction rootReducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case GET_VIDEOGAMES:\n      return { ...state,\n        videogames: action.payload,\n        allVideogames: action.payload\n      };\n\n    case GET_GENRE:\n      return { ...state,\n        genres: action.payload\n      };\n\n    case FILTER_BY_GENRES:\n      const allVideogames = state.allVideogames;\n      const filtergenre = action.payload === \"All\" ? allVideogames : allVideogames.filter(e => e.genres.includes(action.payload));\n      return { ...state,\n        videogames: filtergenre\n      };\n\n    case FILTER_CREATED:\n      const filterDB = action.payload;\n      return {};\n\n    default:\n      return state;\n  }\n}\n\nexport default rootReducer;","map":{"version":3,"sources":["C:/Users/aleal/Desktop/HENRY CURSO/PI ORIGINAL/PI-Videogames/client/src/Redux/reducer/index.js"],"names":["GET_VIDEOGAMES","GET_GENRE","GET_DETAIL","FILTER_BY_GENRES","FILTER_CREATED","ORDER_BY_NAME","ORDER_BY_RATING","GET_NAME_VIDEOGAMES","GET_LOADER","VACIAR_DETAIL","initialState","videogames","genres","allVideogames","rootReducer","state","action","type","payload","filtergenre","filter","e","includes","filterDB"],"mappings":"AAAA,SAASA,cAAT,EACEC,SADF,EACYC,UADZ,EAEEC,gBAFF,EAGEC,cAHF,EAIEC,aAJF,EAKEC,eALF,EAMEC,mBANF,EAOEC,UAPF,EAQEC,aARF,QASO,eATP;AAWA,MAAMC,YAAY,GAAG;AAClBC,EAAAA,UAAU,EAAE,EADM;AAElBC,EAAAA,MAAM,EAAE,EAFU;AAGlBC,EAAAA,aAAa,EAAE;AAHG,CAArB;;AAMA,SAASC,WAAT,GAAkD;AAAA,MAA7BC,KAA6B,uEAAtBL,YAAsB;AAAA,MAARM,MAAQ;;AAChD,UAAOA,MAAM,CAACC,IAAd;AACE,SAAKjB,cAAL;AACE,aAAO,EACL,GAAGe,KADE;AAELJ,QAAAA,UAAU,EAAEK,MAAM,CAACE,OAFd;AAGLL,QAAAA,aAAa,EAAEG,MAAM,CAACE;AAHjB,OAAP;;AAKF,SAAKjB,SAAL;AACE,aAAO,EACL,GAAGc,KADE;AAELH,QAAAA,MAAM,EAAEI,MAAM,CAACE;AAFV,OAAP;;AAIF,SAAKf,gBAAL;AACE,YAAMU,aAAa,GAAGE,KAAK,CAACF,aAA5B;AACA,YAAMM,WAAW,GAAGH,MAAM,CAACE,OAAP,KAAmB,KAAnB,GAA2BL,aAA3B,GAA2CA,aAAa,CAACO,MAAd,CAAsBC,CAAD,IAAOA,CAAC,CAACT,MAAF,CAASU,QAAT,CAAkBN,MAAM,CAACE,OAAzB,CAA5B,CAA/D;AACA,aAAO,EACL,GAAGH,KADE;AAELJ,QAAAA,UAAU,EAAEQ;AAFP,OAAP;;AAIF,SAAKf,cAAL;AACE,YAAMmB,QAAQ,GAAGP,MAAM,CAACE,OAAxB;AACA,aAAO,EAAP;;AAIA;AACE,aAAOH,KAAP;AA1BN;AA4BD;;AAED,eAAeD,WAAf","sourcesContent":["import { GET_VIDEOGAMES,\r\n  GET_GENRE,GET_DETAIL,\r\n  FILTER_BY_GENRES,\r\n  FILTER_CREATED,\r\n  ORDER_BY_NAME,\r\n  ORDER_BY_RATING,\r\n  GET_NAME_VIDEOGAMES,\r\n  GET_LOADER,\r\n  VACIAR_DETAIL\r\n} from '../constantes';\r\n\r\nconst initialState = {\r\n   videogames: [],\r\n   genres: [],\r\n   allVideogames: [],\r\n}\r\n\r\nfunction rootReducer(state= initialState, action) { \r\n  switch(action.type){\r\n    case GET_VIDEOGAMES: \r\n      return {\r\n        ...state, \r\n        videogames: action.payload,\r\n        allVideogames: action.payload\r\n      }\r\n    case GET_GENRE:\r\n      return {\r\n        ...state,\r\n        genres: action.payload\r\n      }\r\n    case FILTER_BY_GENRES: \r\n      const allVideogames = state.allVideogames\r\n      const filtergenre = action.payload === \"All\" ? allVideogames : allVideogames.filter((e) => e.genres.includes(action.payload))\r\n      return {\r\n        ...state,\r\n        videogames: filtergenre\r\n      }\r\n    case FILTER_CREATED:\r\n      const filterDB = action.payload\r\n      return {\r\n\r\n      }\r\n\r\n      default: \r\n        return state\r\n  }\r\n}\r\n\r\nexport default rootReducer"]},"metadata":{},"sourceType":"module"}