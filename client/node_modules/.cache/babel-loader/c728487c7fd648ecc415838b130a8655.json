{"ast":null,"code":"import { GET_VIDEOGAMES, GET_GENRE, GET_DETAIL, FILTER_BY_GENRES, FILTER_CREATED, ORDER_BY_NAME, ORDER_BY_RATING, GET_NAME_VIDEOGAMES, POST_VIDEOGAME, GET_LOADER, VACIAR_DETAIL } from '../constantes';\nconst initialState = {\n  videogames: [],\n  genres: [],\n  allVideogames: []\n};\n\nfunction rootReducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case GET_VIDEOGAMES:\n      let platforms = action.payload.array.forEach(element => {});\n      return { ...state,\n        videogames: action.payload,\n        allVideogames: action.payload\n      };\n\n    case GET_GENRE:\n      return { ...state,\n        genres: action.payload\n      };\n\n    case FILTER_BY_GENRES:\n      const allVideogames = state.allVideogames;\n      const filtergenre = action.payload === \"All\" ? allVideogames : allVideogames.filter(e => e.genres.includes(action.payload));\n      return { ...state,\n        videogames: filtergenre\n      };\n\n    case FILTER_CREATED:\n      const allvideogames = state.allVideogames;\n      const filterDB = action.payload === 'created' ? allvideogames.filter(e => e.createdInDb) : allvideogames.filter(e => !e.createdInDb);\n      return { ...state,\n        videogames: action.payload === 'All' ? state.allVideogames : filterDB\n      };\n\n    case ORDER_BY_NAME:\n      const order = action.payload === 'Asc' ? state.allVideogames.sort((a, b) => {\n        if (a.name.toLowerCase() > b.name.toLowerCase()) return 1;\n        if (b.name.toLowerCase() > a.name.toLowerCase()) return -1;\n        return 0;\n      }) : state.allVideogames.sort((a, b) => {\n        if (a.name.toLowerCase() > b.name.toLowerCase()) return -1;\n        if (b.name.toLowerCase() > a.name.toLowerCase()) return 1;\n        return 0;\n      });\n      return { ...state,\n        videogames: order\n      };\n\n    case ORDER_BY_RATING:\n      const orderRating = action.payload === 'low' ? state.allVideogames.sort((a, b) => {\n        if (a.rating > b.rating) return 1;\n        if (b.rating > a.rating) return -1;\n        return 0;\n      }) : state.allVideogames.sort((a, b) => {\n        if (a.rating > b.rating) return -1;\n        if (b.rating > a.rating) return 1;\n        return 0;\n      });\n      return { ...state,\n        videogames: orderRating\n      };\n\n    case GET_NAME_VIDEOGAMES:\n      return { ...state,\n        videogames: action.payload\n      };\n\n    case POST_VIDEOGAME:\n      return { ...state\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport default rootReducer;","map":{"version":3,"sources":["C:/Users/aleal/Desktop/HENRY CURSO/PI ORIGINAL/PI-Videogames/client/src/Redux/reducer/index.js"],"names":["GET_VIDEOGAMES","GET_GENRE","GET_DETAIL","FILTER_BY_GENRES","FILTER_CREATED","ORDER_BY_NAME","ORDER_BY_RATING","GET_NAME_VIDEOGAMES","POST_VIDEOGAME","GET_LOADER","VACIAR_DETAIL","initialState","videogames","genres","allVideogames","rootReducer","state","action","type","platforms","payload","array","forEach","element","filtergenre","filter","e","includes","allvideogames","filterDB","createdInDb","order","sort","a","b","name","toLowerCase","orderRating","rating"],"mappings":"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","sourcesContent":["import { GET_VIDEOGAMES,\r\n  GET_GENRE,GET_DETAIL,\r\n  FILTER_BY_GENRES,\r\n  FILTER_CREATED,\r\n  ORDER_BY_NAME,\r\n  ORDER_BY_RATING,\r\n  GET_NAME_VIDEOGAMES,\r\n  POST_VIDEOGAME,\r\n  GET_LOADER,\r\n  VACIAR_DETAIL\r\n} from '../constantes';\r\n\r\nconst initialState = {\r\n   videogames: [],\r\n   genres: [],\r\n   allVideogames: [],\r\n}\r\n\r\nfunction rootReducer(state= initialState, action) { \r\n  switch(action.type){\r\n    case GET_VIDEOGAMES: \r\n      let platforms = action.payload.array.forEach(element => {\r\n        \r\n      });\r\n      return {\r\n        ...state, \r\n        videogames: action.payload,\r\n        allVideogames: action.payload\r\n      }\r\n    case GET_GENRE:\r\n      return {\r\n        ...state,\r\n        genres: action.payload\r\n      }\r\n    case FILTER_BY_GENRES: \r\n      const allVideogames = state.allVideogames\r\n      const filtergenre = action.payload === \"All\" ? allVideogames : allVideogames.filter((e) => e.genres.includes(action.payload))\r\n      return {\r\n        ...state,\r\n        videogames: filtergenre\r\n      }\r\n    case FILTER_CREATED:\r\n      const allvideogames = state.allVideogames\r\n      const filterDB = action.payload === 'created' ? allvideogames.filter((e)=> e.createdInDb) : allvideogames.filter((e) => !e.createdInDb)\r\n      return {\r\n        ...state,\r\n        videogames: action.payload === 'All' ? state.allVideogames : filterDB\r\n      }\r\n    case ORDER_BY_NAME:\r\n      const order = action.payload === 'Asc' ? state.allVideogames.sort((a , b) => {\r\n        if(a.name.toLowerCase() > b.name.toLowerCase()) return 1;\r\n        if(b.name.toLowerCase() > a.name.toLowerCase()) return -1;\r\n        return 0;\r\n      }) : state.allVideogames.sort((a , b) => {\r\n        if(a.name.toLowerCase() > b.name.toLowerCase()) return - 1;\r\n        if(b.name.toLowerCase() > a.name.toLowerCase()) return 1;\r\n        return 0;\r\n      })\r\n      return {\r\n        ...state,\r\n        videogames: order\r\n      }\r\n    case ORDER_BY_RATING: \r\n    const orderRating = action.payload === 'low' ? state.allVideogames.sort((a , b) => {\r\n      if(a.rating > b.rating) return 1;\r\n      if(b.rating > a.rating) return -1;\r\n      return 0;\r\n    }) : state.allVideogames.sort((a , b) => {\r\n      if(a.rating > b.rating) return - 1;\r\n      if(b.rating > a.rating) return 1;\r\n      return 0;\r\n    })\r\n      return {\r\n        ...state,\r\n        videogames: orderRating\r\n      }\r\n    case GET_NAME_VIDEOGAMES: \r\n      return {\r\n        ...state,\r\n        videogames: action.payload\r\n      }\r\n    case POST_VIDEOGAME:\r\n      return {\r\n        ...state\r\n      }\r\n\r\n      default: \r\n        return state\r\n  }\r\n}\r\n\r\nexport default rootReducer"]},"metadata":{},"sourceType":"module"}