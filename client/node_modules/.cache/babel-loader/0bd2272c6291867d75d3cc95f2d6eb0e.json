{"ast":null,"code":"import { GET_VIDEOGAMES, GET_GENRE, GET_DETAIL, FILTER_BY_GENRES, FILTER_CREATED, ORDER_BY_NAME, ORDER_BY_RATING, GET_NAME_VIDEOGAMES, POST_VIDEOGAME, VACIAR_DETAIL } from '../constantes';\nconst initialState = {\n  videogames: [],\n  genres: [],\n  allVideogames: [],\n  platforms: [],\n  details: []\n};\n\nfunction rootReducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case GET_VIDEOGAMES:\n      let platforms = [];\n      action.payload.forEach(game => {\n        platforms = [...platforms, ...game.platforms];\n      });\n      return { ...state,\n        videogames: action.payload,\n        allVideogames: action.payload,\n        platforms: Array.from(new Set(platforms)),\n        flagLoad: false\n      };\n\n    case GET_GENRE:\n      return { ...state,\n        genres: action.payload\n      };\n\n    case FILTER_BY_GENRES:\n      const allVideogames = state.allVideogames;\n      const filtergenre = action.payload === \"All\" ? allVideogames : allVideogames.filter(e => e.genres.includes(action.payload));\n      return { ...state,\n        videogames: filtergenre\n      };\n\n    case FILTER_CREATED:\n      const allvideogames = state.allVideogames;\n      const filterDB = action.payload === 'created' ? allvideogames.filter(e => e.createdInDb) : allvideogames.filter(e => !e.createdInDb);\n      return { ...state,\n        videogames: action.payload === 'All' ? state.allVideogames : filterDB\n      };\n\n    case ORDER_BY_NAME:\n      const order = action.payload === 'Asc' ? state.allVideogames.sort((a, b) => {\n        if (a.name.toLowerCase() > b.name.toLowerCase()) return 1;\n        if (b.name.toLowerCase() > a.name.toLowerCase()) return -1;\n        return 0;\n      }) : state.allVideogames.sort((a, b) => {\n        if (a.name.toLowerCase() > b.name.toLowerCase()) return -1;\n        if (b.name.toLowerCase() > a.name.toLowerCase()) return 1;\n        return 0;\n      });\n      return { ...state,\n        videogames: order\n      };\n\n    case ORDER_BY_RATING:\n      const orderRating = action.payload === 'low' ? state.allVideogames.sort((a, b) => {\n        if (a.rating > b.rating) return 1;\n        if (b.rating > a.rating) return -1;\n        return 0;\n      }) : state.allVideogames.sort((a, b) => {\n        if (a.rating > b.rating) return -1;\n        if (b.rating > a.rating) return 1;\n        return 0;\n      });\n      return { ...state,\n        videogames: orderRating\n      };\n\n    case GET_NAME_VIDEOGAMES:\n      return { ...state,\n        videogames: action.payload,\n        flagLoad: false\n      };\n\n    case POST_VIDEOGAME:\n      return { ...state\n      };\n\n    case GET_DETAIL:\n      return { ...state,\n        details: action.payload\n      };\n\n    case VACIAR_DETAIL:\n      return { ...state,\n        details: []\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport default rootReducer;","map":{"version":3,"sources":["C:/Users/aleal/Desktop/HENRY CURSO/PI ORIGINAL/PI-Videogames/client/src/Redux/reducer/index.js"],"names":["GET_VIDEOGAMES","GET_GENRE","GET_DETAIL","FILTER_BY_GENRES","FILTER_CREATED","ORDER_BY_NAME","ORDER_BY_RATING","GET_NAME_VIDEOGAMES","POST_VIDEOGAME","VACIAR_DETAIL","initialState","videogames","genres","allVideogames","platforms","details","rootReducer","state","action","type","payload","forEach","game","Array","from","Set","flagLoad","filtergenre","filter","e","includes","allvideogames","filterDB","createdInDb","order","sort","a","b","name","toLowerCase","orderRating","rating"],"mappings":"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","sourcesContent":["import { GET_VIDEOGAMES,\r\n  GET_GENRE,GET_DETAIL,\r\n  FILTER_BY_GENRES,\r\n  FILTER_CREATED,\r\n  ORDER_BY_NAME,\r\n  ORDER_BY_RATING,\r\n  GET_NAME_VIDEOGAMES,\r\n  POST_VIDEOGAME,\r\n  VACIAR_DETAIL\r\n} from '../constantes';\r\n\r\nconst initialState = {\r\n   videogames: [],\r\n   genres: [],\r\n   allVideogames: [],\r\n   platforms: [],\r\n   details: [],\r\n   \r\n}\r\n\r\nfunction rootReducer(state= initialState, action) { \r\n  switch(action.type){\r\n    case GET_VIDEOGAMES: \r\n      let platforms = [];\r\n\r\n      action.payload.forEach(game => {\r\n        platforms = [...platforms, ...game.platforms]\r\n      });\r\n      return {\r\n        ...state, \r\n        videogames: action.payload,\r\n        allVideogames: action.payload,\r\n        platforms: Array.from(new Set(platforms)),\r\n        flagLoad: false,\r\n      }\r\n    case GET_GENRE:\r\n      return {\r\n        ...state,\r\n        genres: action.payload\r\n      }\r\n    case FILTER_BY_GENRES: \r\n      const allVideogames = state.allVideogames\r\n      const filtergenre = action.payload === \"All\" ? allVideogames : allVideogames.filter((e) => e.genres.includes(action.payload))\r\n      return {\r\n        ...state,\r\n        videogames: filtergenre\r\n      }\r\n    case FILTER_CREATED:\r\n      const allvideogames = state.allVideogames\r\n      const filterDB = action.payload === 'created' ? allvideogames.filter((e)=> e.createdInDb) : allvideogames.filter((e) => !e.createdInDb)\r\n      return {\r\n        ...state,\r\n        videogames: action.payload === 'All' ? state.allVideogames : filterDB\r\n      }\r\n    case ORDER_BY_NAME:\r\n      const order = action.payload === 'Asc' ? state.allVideogames.sort((a , b) => {\r\n        if(a.name.toLowerCase() > b.name.toLowerCase()) return 1;\r\n        if(b.name.toLowerCase() > a.name.toLowerCase()) return -1;\r\n        return 0;\r\n      }) : state.allVideogames.sort((a , b) => {\r\n        if(a.name.toLowerCase() > b.name.toLowerCase()) return - 1;\r\n        if(b.name.toLowerCase() > a.name.toLowerCase()) return 1;\r\n        return 0;\r\n      })\r\n      return {\r\n        ...state,\r\n        videogames: order\r\n      }\r\n    case ORDER_BY_RATING: \r\n    const orderRating = action.payload === 'low' ? state.allVideogames.sort((a , b) => {\r\n      if(a.rating > b.rating) return 1;\r\n      if(b.rating > a.rating) return -1;\r\n      return 0;\r\n    }) : state.allVideogames.sort((a , b) => {\r\n      if(a.rating > b.rating) return - 1;\r\n      if(b.rating > a.rating) return 1;\r\n      return 0;\r\n    })\r\n      return {\r\n        ...state,\r\n        videogames: orderRating\r\n      }\r\n    case GET_NAME_VIDEOGAMES: \r\n      return {\r\n        ...state,\r\n        videogames: action.payload,\r\n        flagLoad: false,\r\n      }\r\n    case POST_VIDEOGAME:\r\n      return {\r\n        ...state\r\n      }\r\n    case GET_DETAIL:\r\n      return {\r\n        ...state,\r\n        details: action.payload\r\n      }\r\n    case VACIAR_DETAIL: \r\n      return {\r\n        ...state,\r\n        details:[]\r\n      }\r\n\r\n      default: \r\n        return state\r\n  }\r\n}\r\n\r\nexport default rootReducer"]},"metadata":{},"sourceType":"module"}